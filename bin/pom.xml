<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>es.ligasnba.app</groupId>
    <artifactId>apps</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>
    <name>Proyecto Team Management</name>

    <modules>
	<module>teammanagement</module>
	<module>pojo-modelutil</module>
    </modules>

    <!--
        ===================================================================
    -->
    <!--
        Default values for properties. These default values are expected
        to be valid for most profiles. Specific profiles can overwrite
        values when necessary.
    -->
    <properties>
        <!--  Data source properties -->
        <dataSource.user>sirnolimit</dataSource.user>
        <dataSource.password>c3m4a</dataSource.password>
<!--         <dataSource.jndiName>jdbc/teammanagement-ds</dataSource.jndiName> -->
        <testDataSource.user>${dataSource.user}</testDataSource.user>
        <testDataSource.password>${dataSource.password}</testDataSource.password>

        <!-- Hibernate properties -->
        <hibernate.show_sql>true</hibernate.show_sql>
        <hibernate.format_sql>true</hibernate.format_sql>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>

        <!-- Package versions (except those defined in "profiles" section) -->
        <slf4j.version>1.5.8</slf4j.version>
        <javassist.version>3.9.0.GA</javassist.version>
        <!-- REMINDER FOR SPRING 3: Spring 3 requires cglib 2.2. -->
        <cglib.version>2.1_3</cglib.version>
        <hibernate.version>3.5.1-Final</hibernate.version>
        <!--
             REMINDER FOR SPRING 3: Spring TestContext 2.5.x is not compatible
             with JUnit 4.5+. Spring TestContext 3.0.x requires JUnit 4.5+.
          -->
        <junit.version>4.4</junit.version>
        <!-- REMINDER FOR SPRING 3: Upgrade to Spring 3 when Tapestry 5.2 be
             released. -->
        <spring.version>2.5.6</spring.version>
        <servletApi.version>2.3</servletApi.version>
        <tapestry.version>5.1.0.5</tapestry.version>
    </properties>

    <!-- ========================================================== -->
    <!-- Profiles -->
    <profiles>
        <profile>
            <id>mysql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- JDBC driver properties -->
                <jdbcDriver.groupId>mysql</jdbcDriver.groupId>
                <jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
                <jdbcDriver.version>5.1.43</jdbcDriver.version>
                <jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>

                <!--  Data source properties -->
<!--                 <dataSource.url>jdbc:mysql://35.195.70.255/teammanagement</dataSource.url> -->
                <dataSource.url>jdbc:mysql://aazt4w28dc2nl2.craopvxk65tw.eu-west-2.rds.amazonaws.com/teammanagement</dataSource.url>
                <testDataSource.url>${dataSource.url}test</testDataSource.url>
                <dataSource.createTablesScript>MySQLCreateTables.sql</dataSource.createTablesScript>

                <!-- Hibernate properties -->
                <hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
            </properties>
        </profile>
    </profiles>

   <!-- ========================================================== -->
   <!-- Additional repositories -->
    <repositories>
        <!-- Repository for Hibernate packages -->
        <repository>
            <id>JBOSS</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/maven2/</url>
        </repository>
    </repositories>

    <!-- ========================================================== -->
    <!-- Dependency management -->
    <dependencyManagement>
        <dependencies>
            <!-- JDBC driver -->
            <dependency>
                <groupId>${jdbcDriver.groupId}</groupId>
                <artifactId>${jdbcDriver.artifactId}</artifactId>
                <version>${jdbcDriver.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- SLF4J (required by Hibernate) -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Javassist (required by Hibernate) -->
            <!--
                 IMPORTANT: In theory, Hibernate can work with GCLIB
                 instead of Javassist. In practice, pojo-advhibernatetut
                 does not work with CGLIB!!!
            -->
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- CGLIB (required by Spring) -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-annotations</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- JUnit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Spring -->
            <!-- REMINDER FOR SPRING 3: remove (here and in child pom's)
                 spring-jdbc when upgrading to Spring 3 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- REMINDER: remove (here and in child pom's) spring-jdbc when
                 upgrading to Spring 3 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
				<scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servletApi.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Tapestry -->
            <dependency>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-core</artifactId>
                <version>${tapestry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-spring</artifactId>
                <version>${tapestry.version}</version>
            </dependency>
            <!-- POJO-Examples Model Util 
            <dependency>
                <groupId>es.udc.pojo</groupId>
                <artifactId>pojo-modelutil</artifactId>
                <version>${project.version}</version>
            </dependency>
-->
        </dependencies>
    </dependencyManagement>

    <build>

        <!-- =============================================================== -->
        <!-- Filtering -->
        <resources>

            <!--
                Apply filtering to files matching the following
                expressions in src/main/resources.
            -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*spring-config.xml</include>
                    <include>*hibernate-config.xml</include>
                </includes>
            </resource>

            <!--
                Continue considering resources the files in
                src/main/resources, but without applying filtering.
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>

            <!-- Filter Jetty configuration -->
            <resource>
                <directory>../src/main/jetty</directory>
                <includes>
                    <include>jetty-env.xml</include>
                </includes>
                <targetPath>../jetty</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>

            <!--
                Apply filtering to files matching the following
                expressions in src/test/resources.
            -->
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>*spring-config-test.xml</include>
                    <include>*hibernate-config-test.xml</include>
                </includes>
            </testResource>

            <!--
                Continue considering resources the files in
                src/test/resources, but without applying filtering.
            -->
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>

        </testResources>


        <plugins>

            <!-- ========================================================== -->
            <!-- Compiler configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- ========================================================== -->
            <!-- Setting SQL Plugin -->
            <!--
                 - Configuartion specifies onError="continue" since SQL scripts
                   try to drop tables before creating them (which causes errors
                   if such tables do not exist yet).

                 - Configuartion specifies autocommit="true" since some drivers
                   (e.g the PostgreSQL JDBC 2 driver) do not commit changes if
                   some error ocurrs.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>${jdbcDriver.groupId}</groupId>
                        <artifactId>${jdbcDriver.artifactId}</artifactId>
                        <version>${jdbcDriver.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${jdbcDriver.className}</driver>
                    <url>${dataSource.url}</url>
                    <username>${dataSource.user}</username>
                    <password>${dataSource.password}</password>
                    <autocommit>true</autocommit>
                    <onError>continue</onError>
                    <fileset>
                        <basedir>${basedir}</basedir>
                        <includes>
                            <include>
                                src/sql/${dataSource.createTablesScript}
                            </include>
                        </includes>
                    </fileset>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <configuration>
                            <driver>${jdbcDriver.className}</driver>
                            <url>${dataSource.url}</url>
                            <username>${dataSource.user}</username>
                            <password>${dataSource.password}</password>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                        </configuration>
                    </execution>
                
                    <execution>
                        <id>create-tables-for-testing</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>${jdbcDriver.className}</driver>
                            <url>${testDataSource.url}</url>
                            <username>${testDataSource.user}</username>
                            <password>${testDataSource.password}</password>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                            <fileset>
                                <basedir>${basedir}</basedir>
                                <includes>
                                    <include>
                                        src/sql/${dataSource.createTablesScript}
                                    </include>
                                </includes>
                            </fileset>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ========================================================== -->
            <!-- Assembly configuration -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>

            <!-- ========================================================== -->
            <!-- Jetty configuration -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.24</version>

                <configuration>
                    <jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
                    <!--
                    <webDefaultXml>
                        ../src/main/jetty/webdefault.xml
                    </webDefaultXml>
                    -->

                    <reload>manual</reload>

                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a
                            workaround for a Maven bug that prevents the
                            requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>9090</port>
                        </connector>
                    </connectors>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>${jdbcDriver.groupId}</groupId>
                        <artifactId>${jdbcDriver.artifactId}</artifactId>
                        <version>${jdbcDriver.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jdbc</artifactId>
                        <version>${spring.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>

    </build>

</project>
