/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.2.v20170220
 * Generated at: 2017-10-17 18:34:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import es.ligasnba.app.util.constants.Constants;

public final class markettradesform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("jar:file:/C:/Users/Sir/.m2/repository/org/springframework/spring-webmvc/3.2.18.RELEASE/spring-webmvc-3.2.18.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1482338760000L));
    _jspx_dependants.put("file:/C:/Users/Sir/.m2/repository/org/springframework/spring-webmvc/3.2.18.RELEASE/spring-webmvc-3.2.18.RELEASE.jar", Long.valueOf(1505150641460L));
    _jspx_dependants.put("jar:file:/C:/Users/Sir/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425975070000L));
    _jspx_dependants.put("file:/C:/Users/Sir/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1505151312971L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("es.ligasnba.app.util.constants.Constants");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/cupertino/jquery-ui-1.10.3.custom.css\"/>  \n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/ui.jqgrid.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.min.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootcards-desktop.min.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/styles.css\"/>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.1.0.min.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-ui-1.10.3.custom.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/grid.locale-es.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery.jqGrid.min.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/noty/jquery.noty.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/noty/layouts/top.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/noty/themes/default.js\"/></script>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<title>Mercado de ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.competicion.nombre}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\n");
      out.write("\n");
      out.write(" <script type=\"text/javascript\">\n");
      out.write("     var jq = jQuery.noConflict();\n");
      out.write(" </script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("jq(function() {\n");
      out.write("\tjq(\"#teamPlayers\").jqGrid({\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t    onSelectRow: function(id,status){\n");
      out.write("\t\n");
      out.write("\t\tupdateTeamData();\n");
      out.write("\t\tevaluateTrade();\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t    },\n");
      out.write("\t  \n");
      out.write("\t   url:'/market/players/'+");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.idEquipo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\n");
      out.write("\t   datatype: 'json',\n");
      out.write("\t   mtype: 'GET',\n");
      out.write("\t      colNames:['id', 'Nombre','Media','Años','Salario'],\n");
      out.write("\t      colModel:[\n");
      out.write("\t\t{name:'idJugador',index:'idJugador', width:6,hidden:true},\n");
      out.write("\t\t{name:'nombre',index:'nombre', width:30,align:'center'},\n");
      out.write("\t\t{name:'media',index:'media', width:10,align:'right', sorttype:'int'},\n");
      out.write("\t\t{name:'contractYears',index:'contractYears', width:10, align:'right', sorttype:'int'},\n");
      out.write("\t\t{name:'currentSalary',index:'currentSalary', width:24, align:'right', sorttype:'int', formatter:'currency', formatoptions:{decimalSeparator:\",\", thousandsSeparator: \",\", decimalPlaces: 0, prefix: \"$ \"}}\t\t\n");
      out.write("\t\n");
      out.write("\t      ],\n");
      out.write("\t      postData: {\n");
      out.write("\t   },\n");
      out.write("\t      sortable: true,\n");
      out.write("\t      rowNum:20,\n");
      out.write("\t      rowList:[20,40,60],\n");
      out.write("\t      height: 300,\n");
      out.write("\t      width: 800,\n");
      out.write("\t      altRows: true,\n");
      out.write("\t      autowidth: true,\n");
      out.write("\t\n");
      out.write("\t   rownumbers: true,\n");
      out.write("\t      sortname: 'puntos',\n");
      out.write("\t      viewrecords: false,\n");
      out.write("\t      sortorder: \"desc\",\n");
      out.write("\t      caption:\"\",\n");
      out.write("\t      emptyrecords: \"Empty records\",\n");
      out.write("\t      multiselect:true,\n");
      out.write("\t      loadComplete: function() {\n");
      out.write("\t\n");
      out.write("\t   },\n");
      out.write("\t      jsonReader : {\n");
      out.write("\t          root: \"rows\",\n");
      out.write("\t          page: \"page\",\n");
      out.write("\t          total: \"total\",\n");
      out.write("\t          records: \"records\",\n");
      out.write("\t          repeatitems: false,\n");
      out.write("\t          cell: \"cell\",\n");
      out.write("\t          id: \"id\"\n");
      out.write("\t      }\n");
      out.write("\t \n");
      out.write("\t\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\t  jq(\"#otherPlayers\").jqGrid({\n");
      out.write("\t\n");
      out.write("\t    onSelectRow: function(id,status){\n");
      out.write("\t\tupdateTeamData();\n");
      out.write("\t\tevaluateTrade();\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t    },\n");
      out.write("\t\n");
      out.write("\t  \n");
      out.write("\t   url:'',\n");
      out.write("\t   datatype: 'json',\n");
      out.write("\t   mtype: 'GET',\n");
      out.write("\t      colNames:['id', 'Nombre','Media','Años','Salario'],\n");
      out.write("\t      colModel:[\n");
      out.write("\t\t{name:'idJugador',index:'idJugador', width:6,editable:false,editoptions:{readonly:true,size:10},hidden:true},\n");
      out.write("\t\t{name:'nombre',index:'nombre', width:30,editable:true, editrules:{required:true}, editoptions:{size:10}, align:'center'},\n");
      out.write("\t\t{name:'media',index:'media', width:10,editable:true, editrules:{required:true}, editoptions:{size:10}, align:'right', sorttype:'int'},\n");
      out.write("\t\t{name:'contractYears',index:'contractYears', width:10,editable:true, editrules:{required:true}, editoptions:{size:10}, align:'right', sorttype:'int'},\n");
      out.write("\t\t{name:'currentSalary',index:'currentSalary', width:24,editable:true, editrules:{required:true}, editoptions:{size:10}, align:'right', sorttype:'int', formatter:'currency', formatoptions:{decimalSeparator:\",\", thousandsSeparator: \",\", decimalPlaces: 0, prefix: \"$ \"}}\t\t\n");
      out.write("\t\n");
      out.write("\t      ],\n");
      out.write("\t      postData: {\n");
      out.write("\t   },\n");
      out.write("\t      sortable: true,\n");
      out.write("\t      rowNum:20,\n");
      out.write("\t      rowList:[20,40,60],\n");
      out.write("\t      height: 300,\n");
      out.write("\t      width: 800,\n");
      out.write("\t      altRows: true,\n");
      out.write("\t      autowidth: true,\n");
      out.write("\t\n");
      out.write("\t   rownumbers: true,\n");
      out.write("\t      sortname: 'puntos',\n");
      out.write("\t      viewrecords: true,\n");
      out.write("\t      sortorder: \"desc\",\n");
      out.write("\t      caption:\"\",\n");
      out.write("\t      emptyrecords: \"Empty records\",\n");
      out.write("\t      multiselect: true,\n");
      out.write("\t      loadComplete: function() {\n");
      out.write("\t\tupdateTeamData();\n");
      out.write("\t   },\n");
      out.write("\t      jsonReader : {\n");
      out.write("\t          root: \"rows\",\n");
      out.write("\t          page: \"page\",\n");
      out.write("\t          total: \"total\",\n");
      out.write("\t          records: \"records\",\n");
      out.write("\t          repeatitems: false,\n");
      out.write("\t          cell: \"cell\",\n");
      out.write("\t          id: \"id\"\n");
      out.write("\t      }\n");
      out.write("\t \n");
      out.write("\t\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("jq( document ).ready(function() {\n");
      out.write("\t\n");
      out.write("\tvar compId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.competicion.idCompeticion}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\n");
      out.write("\tgetTeamData(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.idEquipo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(");\t\n");
      out.write("\n");
      out.write("\tjq.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl: \"/market/teamslist\",\t\n");
      out.write("\t\tdata: ({idCompeticion:compId}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\n");
      out.write("\t\t\tLoadTeamOptions(response);\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\tgenerateNoty(\"Ha habido un problema conectando con el servidor\",'error');\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\tjq('#proposeTradeButton').prop('disabled',true);\n");
      out.write("\n");
      out.write("\n");
      out.write("});\n");
      out.write("\n");
      out.write("function getTeamData(teamId){\n");
      out.write("\n");
      out.write("\tjq.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl: \"/market/getteamdata\",\t\n");
      out.write("\t\tdata: ({idEquipo: teamId}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\t\t\tsetTeamData(response);\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\tgenerateNoty(\"Ha habido un problema conectando con el servidor\",'error');\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function setTeamData(response){\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tif (response.equipo.idEquipo == ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.idEquipo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\n");
      out.write("\n");
      out.write("\t\tjq('#idTeamFrom').text( response.equipo.idEquipo ); \n");
      out.write("\n");
      out.write("\t\tjq('#localLabel').text( response.equipo.nombre ); \n");
      out.write("\n");
      out.write("\t\tjq('#defaultLocalSumSalaries').text( response.salarySpace);\n");
      out.write("\t\n");
      out.write("\t\tjq('#localSumSalaries').text(response.salarySpace);\n");
      out.write("\n");
      out.write("\t\tjq('#defaultLocalNumPlayers').text(response.numPlayers);\t\t\n");
      out.write("\n");
      out.write("\t\tjq('#localNumPlayers').text(response.numPlayers);\t\t\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\telse{\n");
      out.write("\t\tjq('#visitorLabel').text( response.equipo.nombre ); \n");
      out.write("\n");
      out.write("\t\tjq('#defaultVisitorSumSalaries').text(response.salarySpace );\n");
      out.write("\n");
      out.write("\t\tjq('#visitorSumSalaries').text(response.salarySpace );\n");
      out.write("\n");
      out.write("\t\tjq('#defaultVisitorNumPlayers').text(response.numPlayers);\n");
      out.write("\n");
      out.write("\t\tjq('#visitorNumPlayers').text(response.numPlayers);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function LoadTeamOptions(response){\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tjq('#selectTradeTeam').empty();\n");
      out.write("\n");
      out.write("\tjq('#selectTradeTeam').append(new Option(\"Selecciona equipo\", 0, true, true));\n");
      out.write("\n");
      out.write("\tfor (var i in response){\n");
      out.write("\n");
      out.write("\t\tvar team = response[i];\n");
      out.write("\t\tif (team.idEquipo != ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${teamMarketForm.equipo.idEquipo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")\n");
      out.write("\t\t\tjq('#selectTradeTeam').append(new Option(team.nombre, team.idEquipo, true, true));\n");
      out.write("\t\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tjq('#selectTradeTeam option:eq(0)').prop('selected', true)\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function selectTradeTeamChange(){\n");
      out.write("\n");
      out.write("\tvar selected = jq( \"#selectTradeTeam\").val();\n");
      out.write("\n");
      out.write("\tif (selected!=0){\n");
      out.write("\t\tjq(\"#otherPlayers\").jqGrid('setGridParam',{url:'/market/players/'+selected}).trigger('reloadGrid');\t\t\t\t\n");
      out.write("\n");
      out.write("\t\tgetTeamData(selected);\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function proposeTrade(){\n");
      out.write("\n");
      out.write("\tvar localPlayersIds = getSelectedLocalPlayerIds();\t\n");
      out.write("\tvar visitorPlayersIds = getSelectedVisitorPlayerIds();\n");
      out.write("\n");
      out.write("\tvar localIdTeam = jq( \"#idTeamFrom\").text();\n");
      out.write("\n");
      out.write("\tvar visitorIdTeam = jq( \"#selectTradeTeam\").val();\n");
      out.write("\n");
      out.write("\tjq.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl: \"/market/validateTrade\",\t\n");
      out.write("\t\tdata: ({teamFrom:localIdTeam, teamTo:visitorIdTeam,localPlayers: localPlayersIds, visitorPlayers:visitorPlayersIds}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\ttraditional: true,\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\n");
      out.write("\t\t\tif (response.success)\n");
      out.write("\t\t\t\tgenerateNoty(\"\"+response.message+\"\",'success');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\tgenerateNoty(\"\"+response.message+\"\",'error');\n");
      out.write("\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\tgenerateNoty(\"Error en la llamada al servidor\",'error');\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function checkTrade(){\n");
      out.write("\n");
      out.write("\tvar localPlayersIds = getSelectedLocalPlayerIds();\t\n");
      out.write("\tvar visitorPlayersIds = getSelectedVisitorPlayerIds();\n");
      out.write("\n");
      out.write("\tvar localIdTeam = jq( \"#idTeamFrom\").text();\n");
      out.write("\n");
      out.write("\tvar visitorIdTeam = jq( \"#selectTradeTeam\").val();\n");
      out.write("\n");
      out.write("\tjq.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl: \"/market/checkTrade\",\t\n");
      out.write("\t\tdata: ({teamFrom:localIdTeam, teamTo:visitorIdTeam,localPlayers: localPlayersIds, visitorPlayers:visitorPlayersIds}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\ttraditional: true,\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\n");
      out.write("\t\t\tif (response.success)\n");
      out.write("\t\t\t\tgenerateNoty(\"\"+response.message+\"\",'success');\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\tgenerateNoty(\"\"+response.message+\"\",'error');\n");
      out.write("\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\tgenerateNoty(\"Error en la llamada al servidor\",'error');\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getSelectedLocalSumPlayerSalaries(){\n");
      out.write("\n");
      out.write("\tvar salOthers = jq(\"#otherPlayers\").getGridParam('selarrrow');\n");
      out.write("\tvar salaries = parseFloat(0);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tvar salTeam = jq(\"#teamPlayers\").getGridParam('selarrrow');\n");
      out.write("\n");
      out.write("\tfor(var i=0;i<salTeam.length;i++){\n");
      out.write("\n");
      out.write("\t\tvar rowId= salTeam[i];\t\t\n");
      out.write("\n");
      out.write("\t\tsalaries = parseFloat(salaries) + parseFloat(jq(\"#teamPlayers\").jqGrid ('getCell', rowId,'currentSalary'));\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\treturn salaries;\n");
      out.write("\t\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function getSelectedVisitorSumPlayerSalaries(){\n");
      out.write("\n");
      out.write("\tvar salOthers = jq(\"#otherPlayers\").getGridParam('selarrrow');\n");
      out.write("\tvar salaries = parseFloat(0);\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tfor(var i=0;i<salOthers.length;i++){\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tvar rowId= salOthers[i];\t\t\n");
      out.write("\n");
      out.write("\t\tsalaries = parseFloat(salaries) + parseFloat(jq(\"#otherPlayers\").jqGrid ('getCell', rowId,'currentSalary'));\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\treturn salaries;\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getSelectedLocalPlayerIds(){\n");
      out.write("\n");
      out.write("\tvar ids = jq(\"#teamPlayers\").getGridParam('selarrrow');\n");
      out.write("\n");
      out.write("\tvar playerIds = [];\n");
      out.write("\n");
      out.write("\tfor(var i=0;i<ids.length;i++){\n");
      out.write("\n");
      out.write("\t\tvar rowId= ids[i];\t\t\n");
      out.write("\n");
      out.write("\t\tvar idsFromRow = jq(\"#teamPlayers\").jqGrid ('getCell', rowId,'idJugador');\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tplayerIds.push(idsFromRow);\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\treturn playerIds;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function getSelectedVisitorPlayerIds(){\n");
      out.write("\n");
      out.write("\tvar ids = jq(\"#otherPlayers\").getGridParam('selarrrow');\n");
      out.write("\n");
      out.write("\tvar playerIds = [];\n");
      out.write("\n");
      out.write("\tfor(var i=0;i<ids.length;i++){\n");
      out.write("\n");
      out.write("\t\tvar rowId= ids[i];\t\t\n");
      out.write("\n");
      out.write("\t\tvar idsFromRow = jq(\"#otherPlayers\").jqGrid ('getCell', rowId,'idJugador');\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tplayerIds.push(idsFromRow);\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\treturn playerIds;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function updateTeamData(){\n");
      out.write("\n");
      out.write("\tvar localPlayersIds = getSelectedLocalPlayerIds();\n");
      out.write("\tvar visitorPlayersIds = getSelectedVisitorPlayerIds();\n");
      out.write("\t\n");
      out.write("\tvar localsumplayersalaries = getSelectedLocalSumPlayerSalaries();\n");
      out.write("\tvar visitorsumplayersalaries = getSelectedVisitorSumPlayerSalaries();\n");
      out.write("\t\n");
      out.write("\tjq( \"#localNumPlayers\").text( parseInt(jq( \"#defaultLocalNumPlayers\").text()) - localPlayersIds.length + visitorPlayersIds.length) ;\n");
      out.write("\tif (jq( \"#selectTradeTeam\").val() !=0)\n");
      out.write("\t\tjq( \"#visitorNumPlayers\").text( parseInt(jq( \"#defaultVisitorNumPlayers\").text()) - visitorPlayersIds.length + localPlayersIds.length ) ;\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\tjq( \"#localSumPlayerSalaries\").text(localsumplayersalaries);\n");
      out.write("\tjq( \"#visitorSumPlayerSalaries\").text(visitorsumplayersalaries);\n");
      out.write("\tjq( \"#localSumSalaries\").text(parseFloat(jq( \"#defaultLocalSumSalaries\").text()) - visitorsumplayersalaries + localsumplayersalaries );\n");
      out.write("\tjq( \"#visitorSumSalaries\").text(parseFloat(jq( \"#defaultVisitorSumSalaries\").text()) + parseFloat(visitorsumplayersalaries) - parseFloat(localsumplayersalaries));\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function evaluateTrade(){\n");
      out.write("\n");
      out.write("\tvar localPlayersIds = getSelectedLocalPlayerIds();\t\n");
      out.write("\tvar visitorPlayersIds = getSelectedVisitorPlayerIds();\n");
      out.write("\n");
      out.write("\tvar localIdTeam = jq( \"#idTeamFrom\").text();\n");
      out.write("\tvar visitorIdTeam = jq( \"#selectTradeTeam\").val();\n");
      out.write("\n");
      out.write("\tvar validLocalNumPlayers = ( (parseInt(jq( \"#localNumPlayers\").text()) >= ");
      out.print( Constants.cMinPlayersByTeam );
      out.write(") && (parseInt(jq( \"#localNumPlayers\").text()) <= ");
      out.print( Constants.cMaxPlayersByTeam );
      out.write("));\n");
      out.write("\tvar validVisitorNumPlayers = ( (parseInt(jq( \"#visitorNumPlayers\").text()) >= ");
      out.print( Constants.cMinPlayersByTeam );
      out.write(") && (parseInt(jq( \"#visitorNumPlayers\").text()) <= ");
      out.print( Constants.cMaxPlayersByTeam );
      out.write("));\n");
      out.write("\n");
      out.write("// \tvar differenceOfSalaries = parseFloat(0);\n");
      out.write("\n");
      out.write("// \tif ((parseFloat(jq( \"#localSumPlayerSalaries\").text() )!=0) && (parseFloat(jq(\"#visitorSumPlayerSalaries\").text())!=0))\n");
      out.write("// \t\tdifferenceOfSalaries = (parseFloat(jq( \"#localSumPlayerSalaries\").text() ) / parseFloat(jq(\"#visitorSumPlayerSalaries\").text()) );\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\tif ( (localIdTeam!=0) && (visitorIdTeam!=0) && (localPlayersIds.length>0) && (visitorPlayersIds.length>0) && validLocalNumPlayers && validVisitorNumPlayers){\n");
      out.write("\t\tjq('#proposeTradeButton').prop('disabled',false);\n");
      out.write("\t}\n");
      out.write(" \telse {\n");
      out.write(" \t\tjq('#proposeTradeButton').prop('disabled',true);\n");
      out.write(" \t}\n");
      out.write(" \t\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function generateNoty(msg,type){\n");
      out.write("\n");
      out.write("  \tvar n = noty({\n");
      out.write("  \t\ttext: msg,\n");
      out.write("  \t\ttype: type,\n");
      out.write("\t\tcloseWith: ['hover'],\n");
      out.write("\t\ttimeout: 1000\n");
      out.write("  \t});\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navbartrades.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<div id=\"tradeData\">\n");
      out.write("\t\t<div id=\"localTradeData\">\n");
      out.write("\t\t\t<label id=\"idTeamFrom\" class=\"starthidden\"></label>\n");
      out.write("\t\t\t<label id=\"localLabel\">Equipo Local</label>\n");
      out.write("\t\t\t<table class=\"dataTable\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>Salario jugadores ofrecidos</th><td>$<label id=\"localSumPlayerSalaries\"> </label></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("<!-- \t\t\t\t<tr> -->\n");
      out.write("<!-- \t\t\t\t\t<th>Espacio salarial</th><td>$<label class=\"starthidden\" id=\"defaultLocalSumSalaries\"></label><label id=\"localSumSalaries\"></label></td> -->\n");
      out.write("<!-- \t\t\t\t</tr> -->\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<label class=\"starthidden\" id=\"defaultLocalNumPlayers\"></label> <th>Número de jugadores</th><td><label id=\"localNumPlayers\"></label></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t<div id=\"visitorTradeData\">\n");
      out.write("\n");
      out.write("\t\t\t<label id=\"visitorLabel\">Seleccione equipo</label>\n");
      out.write("\t\t\t<table class=\"dataTable\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>Salario jugadores recibidos</th><td>$<label id=\"visitorSumPlayerSalaries\"></label></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("<!-- \t\t\t\t<tr> -->\n");
      out.write("<!-- \t\t\t\t\t<th>Espacio salarial</th><td>$<label class=\"starthidden\" id=\"defaultVisitorSumSalaries\"></label><label id=\"visitorSumSalaries\"></label></td> -->\n");
      out.write("<!-- \t\t\t\t</tr> -->\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>Número de jugadores</th><td><label id=\"defaultVisitorNumPlayers\" class=\"starthidden\"></label><label id=\"visitorNumPlayers\"></label></td>\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<table class=\"tradeTables\">\n");
      out.write("\t<tr>\n");
      out.write("\t<td width=\"50%\"></td><td width=\"600\"><form class=\"pure-form\"><select id=\"selectTradeTeam\" onchange=\"selectTradeTeamChange();\"></select></form></td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t<td width=\"50%\"><table id=\"teamPlayers\"></table></td><td width=\"50%\"><table id=\"otherPlayers\"></table></td>\n");
      out.write("\t</tr>\n");
      out.write("\t</table>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<div class=\"selectedPlayersTrade\">\n");
      out.write("\t<input type=\"button\" class=\"pure-button\" id=\"checkTradeButton\" value=\"Trade válido?\" onclick=\"checkTrade();\"></div>\n");
      out.write("\t<input type=\"button\" class=\"pure-button\" id=\"proposeTradeButton\" value=\"Proponer Traspaso\" onclick=\"proposeTrade();\"></div>\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
