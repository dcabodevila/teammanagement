/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.2.v20170220
 * Generated at: 2018-01-16 19:56:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class marketreceivedform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Sir/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425975070000L));
    _jspx_dependants.put("file:/C:/Users/Sir/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1505151312971L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-1.6.4.min.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-ui.js\"/></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/cupertino/jquery-ui-1.10.3.custom.css\"/>  \n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/styles.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/cupertino/jquery-ui-1.10.3.custom.css\"/>  \n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.min.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootcards-desktop.min.css\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/styles.css\"/>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.1.0.min.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-ui-1.10.3.custom.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootstrap.min.js\"/></script>\n");
      out.write("<script type='text/javascript' src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/bootcards.min.js\"/></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("$( document ).ready(function() {\n");
      out.write("\n");
      out.write("\tgetReceivedTrades();\n");
      out.write("\n");
      out.write("});\n");
      out.write("\n");
      out.write("\n");
      out.write("function getReceivedTrades(){\n");
      out.write("\n");
      out.write("\tvar teamId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${idEquipo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\n");
      out.write("\n");
      out.write("\t$.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"get\",\n");
      out.write("\t\turl: \"/market/getreceivedtrades\",\t\n");
      out.write("\t\tdata: ({idEquipo:teamId}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\n");
      out.write("\t\t\tLoadReceivedTrades(response);\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\talert(\"Ha habido un problema conectando con el servidor\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function LoadReceivedTrades(response){\n");
      out.write("\n");
      out.write("\t$('#receivedTrades').empty();\n");
      out.write("\n");
      out.write("\tif (response.listaTraspasosRecibidos.length==0)\n");
      out.write("\t\t$('#receivedTrades').append(\"No hay ningún traspaso recibido.\");\t\t \n");
      out.write("\n");
      out.write("\tfor (var i in response.listaTraspasosRecibidos){\n");
      out.write("\t\t\n");
      out.write("\t\tvar html = '';\n");
      out.write("\t\tvar traspaso = response.listaTraspasosRecibidos[i];\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\thtml = '<div id=\"traspasoDiv'+traspaso.idTraspaso+'\" class=\"starthidden\"><table class=\"dataTable\"><tr><th class=\"starthidden\">'+traspaso.idTraspaso+'</th><th>'+traspaso.nombreEquipoPropone+'</th><th width=\"150\">'+traspaso.nombreEquipoRecibe+'</th></tr>';\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("\t\tvar numberRows = Math.max(traspaso.nombresJugadoresOfrecidos.length,traspaso.nombresJugadoresRecibidos.length); \n");
      out.write("\n");
      out.write("\t\tfor (x=0;x<numberRows;x++){\n");
      out.write("\n");
      out.write("\t\t\tvar jugadorOfrecido = ''\n");
      out.write("\t\t\t\tif ((traspaso.nombresJugadoresOfrecidos.length-1)<x)\n");
      out.write("\t\t\t\t\tjugadorOfrecido = ''\n");
      out.write("\n");
      out.write("\t\t\t\telse\n");
      out.write("\t\t\t\t\tjugadorOfrecido = traspaso.nombresJugadoresOfrecidos[x];\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\tvar jugadorRecibido = ''\n");
      out.write("\t\t\t\tif ((traspaso.nombresJugadoresRecibidos.length-1)<x)\n");
      out.write("\t\t\t\t\tjugadorRecibido = ''\n");
      out.write("\t\t\t\telse\n");
      out.write("\t\t\t\t\tjugadorRecibido = traspaso.nombresJugadoresRecibidos[x];\n");
      out.write("\n");
      out.write("\t\t\thtml = html + '</td><td width=\"150\">'+jugadorOfrecido+'</td><td width=\"150\">'+jugadorRecibido+'</td></tr>';\n");
      out.write("\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\thtml= html+'</table>';\n");
      out.write("\t\thtml= html+ '<input type=\"button\" class=\"pure-button\" value=\"Aceptar\" onclick=\"acceptTrade('+traspaso.idTraspaso+');\"> <input type=\"button\" value=\"Rechazar\" onclick=\"rejectTrade('+traspaso.idTraspaso+');\">';\n");
      out.write("\t\thtml= html+'<div id=\"tradeMsg'+traspaso.idTraspaso+' style=\"width:250\"></div></div>';\n");
      out.write("\t\t$('#receivedTrades').append(html);\n");
      out.write("\t\tvar traspasoDiv = '#traspasoDiv'+ traspaso.idTraspaso;\n");
      out.write("\t\t$(traspasoDiv).fadeIn();\n");
      out.write("\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function acceptTrade(idTrade){\n");
      out.write("\t$.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"post\",\n");
      out.write("\t\turl: \"/market/accepttrade\",\t\n");
      out.write("\t\tdata: ({idTraspaso:idTrade}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\t\t\tvar tradeMsgDiv = '#tradeMsg'+idTrade;\n");
      out.write("\t\t\t$(tradeMsgDiv).append(response.message);\n");
      out.write("\n");
      out.write("\t\t\tif (response.success){\n");
      out.write("\t\t\t\t$(tradeMsgDiv).addClass(\"ui-state-highlight\");\n");
      out.write("\t\t\t\tvar traspasoDiv = '#traspasoDiv'+idTrade;\t\t\t\t\n");
      out.write("\t\t\t\t$(traspasoDiv).fadeOut(\"slow\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$(tradeMsgDiv).addClass(\"ui-state-error\");\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\talert(\"Ha habido un problema conectando con el servidor\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("function rejectTrade(idTrade){\n");
      out.write("\n");
      out.write("\t$.ajax({\n");
      out.write("\n");
      out.write("\t\ttype:\"post\",\n");
      out.write("\t\turl: \"/market/rejecttrade\",\t\n");
      out.write("\t\tdata: ({idTraspaso:idTrade}),\n");
      out.write("\t\tdataType: \"json\",\n");
      out.write("\t\tsuccess: function(response){\n");
      out.write("\t\t\tvar tradeMsgDiv = '#tradeMsg'+idTrade;\n");
      out.write("\t\t\t$(tradeMsgDiv).append(response.message);\n");
      out.write("\n");
      out.write("\t\t\tif (response.success){\n");
      out.write("\t\t\t\t$(tradeMsgDiv).addClass(\"ui-state-highlight\");\n");
      out.write("\t\t\t\tvar traspasoDiv = '#traspasoDiv'+idTrade;\t\t\t\t\n");
      out.write("\t\t\t\t$(traspasoDiv).fadeOut(\"slow\");\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\telse\n");
      out.write("\t\t\t\t$(\"#tradeMsg\").addClass(\"ui-state-error\");\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\n");
      out.write("\t\t},\n");
      out.write("\t\terror: function(){\n");
      out.write("\t\t\talert(\"Ha habido un problema conectando con el servidor\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "navbartrades.jsp", out, false);
      out.write("\n");
      out.write("<div id=\"receivedTrades\"></div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
